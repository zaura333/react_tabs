{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","selectedTab","id","foundTab","find","tab","firstTab","findSelectedTab","handleClick","className","title","map","href","onClick","content","App","useState","setSelectedTabId","ReactDOM","render","document","getElementById"],"mappings":"iMAIaA,EAAsB,SAAC,GAE7B,IADLC,EACI,EADJA,KAAMC,EACF,EADEA,cAAeC,EACjB,EADiBA,cAgBfC,EAd2C,SAACC,GAChD,IAAMC,EAAWL,EAAKM,MAAK,SAACC,GAAD,OAASA,EAAIH,KAAOA,KAE/C,GAAIC,EACF,OAAOA,EAGT,IAAOG,EAAP,YAAmBR,EAAnB,MAIA,OAFAE,EAAcM,GAEPA,EAGWC,CAAgBR,GAE9BS,EAAc,SAACH,GAAD,OAAkB,WAChCA,EAAIH,KAAOD,EAAYC,IACzBF,EAAcK,KAIlB,OACE,qCACE,oBAAII,UAAU,QAAd,SACGR,EAAW,0BACWA,EAAYS,OAC/B,qBAGN,sBAAK,UAAQ,gBAAb,UACE,qBAAKD,UAAU,gBAAf,SACE,6BACGX,EAAKa,KAAI,SAACN,GAAD,OACR,oBACEI,UAAWR,EAAYC,KAAOG,EAAIH,GAAK,YAAc,GACrD,UAAQ,MAFV,SAKE,mBACEU,KAAI,WAAMP,EAAIH,IACd,UAAQ,UACRW,QAASL,EAAYH,GAHvB,SAKGA,EAAIK,SAPFL,EAAIH,WAcjB,qBAAKO,UAAU,QAAQ,UAAQ,aAA/B,SACGR,EAAYa,iBCpDVhB,EAAO,CAClB,CAAEI,GAAI,QAASQ,MAAO,QAASI,QAAS,eACxC,CAAEZ,GAAI,QAASQ,MAAO,QAASI,QAAS,eACxC,CAAEZ,GAAI,QAASQ,MAAO,QAASI,QAAS,gBAG7BC,EAAgB,WAC3B,MAA0CC,mBAAiB,SAA3D,mBAAOjB,EAAP,KAAsBkB,EAAtB,KAMA,OACE,qBAAKR,UAAU,UAAf,SACE,cAAC,EAAD,CACEX,KAAMA,EACNC,cAAeA,EACfC,cATkB,SAACK,GACvBY,EAAiBZ,EAAIH,UCdzBgB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.de6812e0.chunk.js","sourcesContent":["import { FC } from 'react';\nimport { TabType } from '../../types/TabType';\nimport { TabsProps } from '../../types/TabsProps';\n\nexport const Tabs: FC<TabsProps> = ({\n  tabs, selectedTabId, onTabSelected,\n}) => {\n  const findSelectedTab: (id: string) => TabType = (id: string) => {\n    const foundTab = tabs.find((tab) => tab.id === id);\n\n    if (foundTab) {\n      return foundTab;\n    }\n\n    const [firstTab] = tabs;\n\n    onTabSelected(firstTab);\n\n    return firstTab;\n  };\n\n  const selectedTab = findSelectedTab(selectedTabId);\n\n  const handleClick = (tab: TabType) => () => {\n    if (tab.id !== selectedTab.id) {\n      onTabSelected(tab);\n    }\n  };\n\n  return (\n    <>\n      <h1 className=\"title\">\n        {selectedTab\n          ? `Selected tab is ${selectedTab.title}`\n          : 'Tab not selected'}\n      </h1>\n\n      <div data-cy=\"TabsComponent\">\n        <div className=\"tabs is-boxed\">\n          <ul>\n            {tabs.map((tab) => (\n              <li\n                className={selectedTab.id === tab.id ? 'is-active' : ''}\n                data-cy=\"Tab\"\n                key={tab.id}\n              >\n                <a\n                  href={`#${tab.id}`}\n                  data-cy=\"TabLink\"\n                  onClick={handleClick(tab)}\n                >\n                  {tab.title}\n                </a>\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <div className=\"block\" data-cy=\"TabContent\">\n          {selectedTab.content}\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { TabType } from './types/TabType';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState<string>('tab-1');\n\n  const handleTabSelect = (tab: TabType) => {\n    setSelectedTabId(tab.id);\n  };\n\n  return (\n    <div className=\"section\">\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={handleTabSelect}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}